{
  "_from": "p-limit@^2.0.0",
  "_id": "p-limit@2.3.0",
  "_inBundle": false,
  "_integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
  "_location": "/npm/yargs/p-limit",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "p-limit",
    "fetchSpec": "^2.0.0",
    "name": "p-limit",
    "raw": "p-limit@^2.0.0",
    "rawSpec": "^2.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "/npm/yargs/p-locate"
  ],
  "_resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz",
  "_shasum": "3dd33c647a214fdfffd835933eb086da0dc21db1",
  "_shrinkwrap": null,
  "_spec": "p-limit@^2.0.0",
  "_where": "/Users/claudiahdz/npm/cli/node_modules/yargs/node_modules/p-locate",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-limit/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "p-try": "^2.0.0"
  },
  "deprecated": false,
  "description": "Run multiple promise-returning & async functions with limited concurrency",
  "devDependencies": {
    "ava": "^1.2.1",
    "delay": "^4.1.0",
    "in-range": "^1.0.0",
    "random-int": "^1.0.0",
    "time-span": "^2.0.0",
    "tsd-check": "^0.3.0",
    "xo": "^0.24.0"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.d.ts",
    "index.js"
  ],
  "funding": "https://github.com/sponsors/sindresorhus",
  "homepage": "https://github.com/sindresorhus/p-limit#readme",
  "keywords": [
    "async",
    "await",
    "batch",
    "bluebird",
    "concurrency",
    "limit",
    "limited",
    "promise",
    "promises",
    "queue",
    "rate",
    "ratelimit",
    "task",
    "throat",
    "throttle"
  ],
  "license": "MIT",
  "name": "p-limit",
  "optionalDependencies": {},
  "readme": "# p-limit [![Build Status](https://travis-ci.org/sindresorhus/p-limit.svg?branch=master)](https://travis-ci.org/sindresorhus/p-limit)\n\n> Run multiple promise-returning & async functions with limited concurrency\n\n## Install\n\n```\n$ npm install p-limit\n```\n\n## Usage\n\n```js\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n\tlimit(() => fetchSomething('foo')),\n\tlimit(() => fetchSomething('bar')),\n\tlimit(() => doSomething())\n];\n\n(async () => {\n\t// Only one promise is run at once\n\tconst result = await Promise.all(input);\n\tconsole.log(result);\n})();\n```\n\n## API\n\n### pLimit(concurrency)\n\nReturns a `limit` function.\n\n#### concurrency\n\nType: `number`\\\nMinimum: `1`\\\nDefault: `Infinity`\n\nConcurrency limit.\n\n### limit(fn, ...args)\n\nReturns the promise returned by calling `fn(...args)`.\n\n#### fn\n\nType: `Function`\n\nPromise-returning/async function.\n\n#### args\n\nAny arguments to pass through to `fn`.\n\nSupport for passing arguments on to the `fn` is provided in order to be able to avoid creating unnecessary closures. You probably don't need this optimization unless you're pushing a *lot* of functions.\n\n### limit.activeCount\n\nThe number of promises that are currently running.\n\n### limit.pendingCount\n\nThe number of promises that are waiting to run (i.e. their internal `fn` was not called yet).\n\n### limit.clearQueue()\n\nDiscard pending promises that are waiting to run.\n\nThis might be useful if you want to teardown the queue at the end of your program's lifecycle or discard any function calls referencing an intermediary state of your app.\n\nNote: This does not cancel promises that are already running.\n\n## FAQ\n\n### How is this different from the [`p-queue`](https://github.com/sindresorhus/p-queue) package?\n\nThis package is only about limiting the number of concurrent executions, while `p-queue` is a fully featured queue implementation with lots of different options, introspection, and ability to pause the queue.\n\n## Related\n\n- [p-queue](https://github.com/sindresorhus/p-queue) - Promise queue with concurrency control\n- [p-throttle](https://github.com/sindresorhus/p-throttle) - Throttle promise-returning & async functions\n- [p-debounce](https://github.com/sindresorhus/p-debounce) - Debounce promise-returning & async functions\n- [p-all](https://github.com/sindresorhus/p-all) - Run promise-returning & async functions concurrently with optional limited concurrency\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-p-limit?utm_source=npm-p-limit&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-limit.git"
  },
  "scripts": {
    "test": "xo && ava && tsd-check"
  },
  "version": "2.3.0"
}
